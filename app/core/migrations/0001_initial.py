# Generated by Django 2.0.3 on 2018-05-05 03:37

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_posted', models.DateField(auto_now=True)),
                ('date_occuring', models.DateTimeField()),
                ('title', models.CharField(max_length=32)),
                ('description', models.CharField(blank=True, max_length=128, null=True)),
                ('notes', models.CharField(blank=True, max_length=32, null=True)),
                ('importance', models.CharField(blank=True, choices=[('1', 'Low'), ('2', 'Medium'), ('3', 'High')], max_length=12, null=True)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=24, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='GroupEntity',
            fields=[
                ('group', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='auth.Group')),
                ('description', models.CharField(blank=True, max_length=512)),
                ('hidden', models.BooleanField(default=True, help_text='Hidden from the apply menu.')),
                ('public', models.BooleanField(default=False, help_text='Automatically join upon request.')),
                ('managers', models.ManyToManyField(blank=True, help_text='Users who can accept/decline requests.', null=True, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='GroupRequest',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Accepted', 'Accepted'), ('Rejected', 'Rejected'), ('Vetoed', 'Vetoed')], max_length=32)),
                ('date_requested', models.DateField(auto_now=True)),
                ('date_updated', models.DateField(auto_now=True)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.GroupEntity')),
                ('processed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='processor', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'permissions': (('manage_group_requests', 'Can manage group requests.'), ('audit_group_requests', 'Can view the group request audit log.')),
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=24)),
                ('message', models.CharField(max_length=500)),
                ('read', models.BooleanField(default=False)),
                ('date_created', models.DateField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('biography', models.CharField(blank=True, max_length=1500, null=True)),
                ('timezone', models.CharField(blank=True, choices=[('EU', 'EU'), ('US', 'US')], max_length=2, null=True)),
                ('points', models.IntegerField(default=0)),
                ('active', models.BooleanField(default=True)),
                ('twitter', models.URLField(blank=True, max_length=32, null=True)),
                ('steam', models.URLField(blank=True, max_length=255, null=True)),
                ('blizzard', models.CharField(blank=True, max_length=32, null=True)),
                ('discord', models.CharField(blank=True, max_length=32, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Guild',
            fields=[
                ('game_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.Game')),
                ('image', models.URLField(blank=True, max_length=255, null=True)),
                ('slug', models.CharField(blank=True, max_length=24, null=True)),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='auth.Group')),
            ],
            bases=('core.game',),
        ),
        migrations.AddField(
            model_name='profile',
            name='games',
            field=models.ManyToManyField(related_name='games', to='core.Game'),
        ),
        migrations.AddField(
            model_name='profile',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='game',
            name='leadership',
            field=models.ManyToManyField(to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='event',
            name='group',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='auth.Group'),
        ),
        migrations.AddField(
            model_name='profile',
            name='guilds',
            field=models.ManyToManyField(related_name='guilds', to='core.Guild'),
        ),
    ]
